import Mathlib
open BigOperators


abbrev putnam_2019_a1_solution : Set ‚Ñ§ := sorry
-- {n : ‚Ñ§ | n ‚â• 0 ‚àß ¬¨Int.ModEq 9 n 3 ‚àß ¬¨Int.ModEq 9 n 6}
theorem putnam_2019_a1
: {n : ‚Ñ§ | ‚àÉ A B C : ‚Ñ§, A ‚â• 0 ‚àß B ‚â• 0 ‚àß C ‚â• 0 ‚àß A^3 + B^3 + C^3 - 3*A*B*C = n} = putnam_2019_a1_solution :=
sorry

noncomputable abbrev putnam_2019_a3_solution : ‚Ñù := sorry
-- 2019^(-(1:‚Ñù)/2019)
theorem putnam_2019_a3
(v : Polynomial ‚ÑÇ ‚Üí Prop := fun b : Polynomial ‚ÑÇ => b.degree = 2019 ‚àß 1 ‚â§ (b.coeff 0).re ‚àß (b.coeff 2019).re ‚â§ 2019 ‚àß
(‚àÄ i : Fin 2020, (b.coeff i).im = 0) ‚àß (‚àÄ i : Fin 2019, (b.coeff i).re < (b.coeff (i + 1)).re))
(Œº : Polynomial ‚ÑÇ ‚Üí ‚Ñù := fun b : Polynomial ‚ÑÇ => (Multiset.map (fun œâ : ‚ÑÇ => ‚Äñœâ‚Äñ) (Polynomial.roots b)).sum/2019)
: (‚àÄ b : Polynomial ‚ÑÇ, v b ‚Üí Œº b ‚â• putnam_2019_a3_solution) ‚àß
‚àÄ M : ‚Ñù, (‚àÄ b : Polynomial ‚ÑÇ, v b ‚Üí Œº b ‚â• M) ‚Üí M ‚â§ putnam_2019_a3_solution :=
sorry

abbrev putnam_2019_a4_solution : Prop := sorry
-- False
theorem putnam_2019_a4
(fint : ((Fin 3 ‚Üí ‚Ñù) ‚Üí ‚Ñù) ‚Üí Prop)
(hfint : ‚àÄ f : (Fin 3 ‚Üí ‚Ñù) ‚Üí ‚Ñù, fint f = (‚àÄ S : Fin 3 ‚Üí ‚Ñù, (‚à´ x in {p : Fin 3 ‚Üí ‚Ñù | Euclidean.dist p S = 1}, f x) = 0))
: (‚àÄ f : (Fin 3 ‚Üí ‚Ñù) ‚Üí ‚Ñù, (Continuous f ‚àß fint f) ‚Üí (‚àÄ x : Fin 3 ‚Üí ‚Ñù, f x = 0)) ‚Üî putnam_2019_a4_solution :=
sorry

abbrev putnam_2019_a5_solution : ‚Ñï ‚Üí ‚Ñï := sorry
-- (fun p : ‚Ñï => (p - 1) / 2)
theorem putnam_2019_a5
(p : ‚Ñï)
(q : Polynomial (ZMod p))
(a : ‚Ñï ‚Üí ZMod p)
(npoly : ‚Ñï ‚Üí Polynomial (ZMod p))
(ndiv : ‚Ñï ‚Üí Prop)
(podd : Odd p)
(pprime : p.Prime)
(hq : ‚àÄ k : ‚Ñï, q.coeff k = a k)
(ha0 : a 0 = 0 ‚àß ‚àÄ k > p - 1, a k = 0)
(haother : ‚àÄ k : Set.Icc 1 (p - 1), a k = ((k : ‚Ñï) ^ ((p - 1) / 2)) % p)
(hnpoly : ‚àÄ n : ‚Ñï, ‚àÄ x : ZMod p, (npoly n).eval x = (x - 1) ^ n)
(hndiv : ‚àÄ n : ‚Ñï, ndiv n = (npoly n ‚à£ q))
: ndiv (putnam_2019_a5_solution p) ‚àß ‚àÄ n, ndiv n ‚Üí n ‚â§ (putnam_2019_a5_solution p) :=
sorry

abbrev putnam_2019_b1_solution : ‚Ñï ‚Üí ‚Ñï := sorry
-- (fun n : ‚Ñï => 5 * n + 1)
theorem putnam_2019_b1
(n : ‚Ñï)
(Pn : Set (Fin 2 ‚Üí ‚Ñ§))
(pZtoR : (Fin 2 ‚Üí ‚Ñ§) ‚Üí (Fin 2 ‚Üí ‚Ñù))
(sPnsquare : Finset (Fin 2 ‚Üí ‚Ñ§) ‚Üí Prop)
(hPn : Pn = {p : Fin 2 ‚Üí ‚Ñ§ | (p 0 = 0 ‚àß p 1 = 0) ‚à® (‚àÉ k ‚â§ n, (p 0) ^ 2 + (p 1) ^ 2 = 2 ^ k)})
(hpZtoR : ‚àÄ p : Fin 2 ‚Üí ‚Ñ§, ‚àÄ i : Fin 2, (pZtoR p) i = p i)
(hsPnsquare : ‚àÄ sPn : Finset (Fin 2 ‚Üí ‚Ñ§), sPnsquare sPn = (sPn.card = 4 ‚àß ‚àÉ p4 : Fin 4 ‚Üí (Fin 2 ‚Üí ‚Ñ§), Set.range p4 = sPn ‚àß (‚àÉ s > 0, ‚àÄ i : Fin 4, Euclidean.dist (pZtoR (p4 i)) (pZtoR (p4 (i + 1))) = s) ‚àß (Euclidean.dist (pZtoR (p4 0)) (pZtoR (p4 2)) = Euclidean.dist (pZtoR (p4 1)) (pZtoR (p4 3)))))
: {sPn : Finset (Fin 2 ‚Üí ‚Ñ§) | (sPn : Set (Fin 2 ‚Üí ‚Ñ§)) ‚äÜ Pn ‚àß sPnsquare sPn}.encard = putnam_2019_b1_solution n :=
sorry

open Topology Filter Set
noncomputable abbrev putnam_2019_b2_solution : ‚Ñù := sorry
-- 8/Real.pi^3
theorem putnam_2019_b2
(a : ‚Ñï ‚Üí ‚Ñù := fun n : ‚Ñï => ‚àë k : Icc (1 : ‚Ñ§) (n - 1),
Real.sin ((2*k - 1)*Real.pi/(2*n))/((Real.cos ((k - 1)*Real.pi/(2*n))^2)*(Real.cos (k*Real.pi/(2*n))^2)))
: Tendsto (fun n : ‚Ñï => (a n)/n^3) atTop (ùìù putnam_2019_b2_solution) :=
sorry

open Matrix
theorem putnam_2019_b3
(n : ‚Ñï)
(hn : n > 0)
(Q : Matrix (Fin n) (Fin n) ‚Ñù)
(hQ0 : ‚àÄ i j : Fin n, i ‚â† j ‚Üí dotProduct (Q i) (Q j) = 0 ‚àß dotProduct (Q·µÄ i) (Q·µÄ j) = 0)
(hQ1 : ‚àÄ i : Fin n, dotProduct (Q i) (Q i) = 1 ‚àß dotProduct (Q·µÄ i) (Q·µÄ i) = 1)
(u : Matrix (Fin n) (Fin 1) ‚Ñù)
(hu : u·µÄ*u = 1)
(P : Matrix (Fin n) (Fin n) ‚Ñù := 1 - (u * u·µÄ))
: (Q - 1).det ‚â† 0 ‚Üí (P * Q - 1).det = 0 :=
sorry

abbrev putnam_2019_b5_solution :  ‚Ñï √ó ‚Ñï := sorry
-- ‚ü®2019, 1010‚ü©
theorem putnam_2019_b5
(F : ‚Ñï ‚Üí ‚Ñï)
(P : Polynomial ‚Ñï)
(hF : ‚àÄ x, x ‚â• 3 ‚Üí F x = F (x - 1) + F (x - 2))
(F12 : F 1 = 1 ‚àß F 2 = 1)
(Pdeg: Polynomial.degree P = 1008)
(hp: ‚àÄ n : ‚Ñï, (n ‚â§ 1008) ‚Üí P.eval (2 * n + 1) = F (2 * n + 1))
: ‚àÄ j k : ‚Ñï, (P.eval 2019 = F j - F k) ‚Üî ‚ü®j, k‚ü© = putnam_2019_b5_solution  :=
sorry
